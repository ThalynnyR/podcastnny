{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trabelo/Documents/podcastnny/src/components/Player/index.tsx\";\nimport Image from 'next/image';\nimport { useEffect, useRef, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDuration';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null); // para manipular a tag audio\n\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0); //barrinha de progresso\n\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    //Quando algo muda, usar useEffect\n    if (!audioRef.current) return; //current = valor da referencia\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]); // toda vez que isPlaying mudar, play ou pause ou underfined\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    }); //ouvir o evento\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), episode ? /*#__PURE__*/_jsxDEV(Slider, {\n          max: episode.duration //a duracao max que ele pode chegar em segundos\n          ,\n          value: progress // o tanto que o episodio já progredio\n          ,\n          trackStyle: {\n            backgroundColor: '#04d361'\n          } // cor da barra\n          ,\n          railStyle: {\n            background: '#9f75ff'\n          } // cor de fundo da barra\n          ,\n          handleStyle: {\n            borderColor: '#04d361',\n            borderWidth: 4\n          } // cor da bolinha\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.empySlider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true // o audio já sai tocando\n        ,\n        loop: isLooping,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false),\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleLoop,\n          disabled: !episode,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/trabelo/Documents/podcastnny/src/components/Player/index.tsx"],"names":["Image","useEffect","useRef","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","duration","backgroundColor","background","borderColor","borderWidth","empySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useEffect, useRef, useState} from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDuration';\n\nexport function Player() {\n  const audioRef = useRef<HTMLAudioElement>(null); // para manipular a tag audio\n  const [progress, setProgress] = useState(0) //barrinha de progresso\n\n  const { episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n\n  useEffect(() => { //Quando algo muda, usar useEffect\n    if (!audioRef.current) return; //current = valor da referencia\n\n    if (isPlaying) {\n      audioRef.current.play()\n    } else {\n      audioRef.current.pause()\n    }\n  }, [isPlaying]) // toda vez que isPlaying mudar, play ou pause ou underfined\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    }) //ouvir o evento\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n\n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"Tocando agora\" />\n        <strong>Tocando agora</strong>\n      </header>\n\n      {episode ? (\n        <div className={styles.currentEpisode}>\n          <Image\n            width={592}\n            height={592}\n            src={episode.thumbnail}\n            objectFit=\"cover\"\n          />\n          <strong>{episode.title}</strong>\n          <span>{episode.members}</span>\n        </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n          <strong>Selecione um podcast para ouvir</strong>\n        </div>\n      )}\n\n      <footer className={!episode ? styles.empty : ''}>\n        <div className={styles.progress}>\n          <span>{convertDurationToTimeString(progress)}</span>\n          {episode ? (\n            <Slider\n              max={episode.duration} //a duracao max que ele pode chegar em segundos\n              value={progress} // o tanto que o episodio já progredio\n              trackStyle={{ backgroundColor: '#04d361' }} // cor da barra\n              railStyle={{ background: '#9f75ff' }} // cor de fundo da barra\n              handleStyle={{ borderColor: '#04d361', borderWidth: 4 }} // cor da bolinha\n            />\n          ) : (\n            <div className={styles.empySlider} />\n          )}\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n        </div>\n\n        {episode && (\n          <audio\n            src={episode.url}\n            ref={audioRef}\n            autoPlay // o audio já sai tocando\n            loop={isLooping}\n            onPlay={() => setPlayingState(true)}\n            onPause={() => setPlayingState(false)}\n            onLoadedMetadata={setupProgressListener}\n          />\n        )}\n\n        <div className={styles.buttons}>\n          <button\n            type=\"button\"\n            disabled={!episode || episodeList.length === 1}\n            onClick={toggleShuffle}\n            className={isShuffling ? styles.isActive : ''}\n          >\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={playPrevious}\n            disabled={!episode || !hasPrevious}>\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\n          </button>\n          <button\n            type=\"button\"\n            className={styles.playButton}\n            disabled={!episode}\n            onClick={togglePlay}\n          >\n            {isPlaying\n              ? <img src=\"/pause.svg\" alt=\"Tocar\" />\n              : <img src=\"/play.svg\" alt=\"Tocar\" />\n            }\n          </button>\n          <button\n            type=\"button\"\n            onClick={playNext}\n            disabled={!episode || !hasNext}>\n            <img src=\"/play-next.svg\" alt=\"Tocar próxima\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={toggleLoop}\n            disabled={!episode}\n            className={isLooping ? styles.isActive : ''}>\n            <img src=\"/repeat.svg\" alt=\"Repetir\" />\n          </button>\n        </div>\n      </footer>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}