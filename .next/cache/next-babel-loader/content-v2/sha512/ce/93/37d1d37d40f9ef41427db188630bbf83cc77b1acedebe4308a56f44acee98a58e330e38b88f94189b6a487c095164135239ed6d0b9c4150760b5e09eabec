{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/trabelo/Documents/podcastnny/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/trabelo/Documents/podcastnny/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\n//tipagem do proprio next\nimport Image from 'next/image';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './home.module.scss';\nimport { PlayerContext } from \"../contexts/PlayerContext\";\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  _s();\n\n  var _this = this;\n\n  var lastedEpisodes = _ref.lastedEpisodes,\n      allEpisodes = _ref.allEpisodes;\n\n  var _useContext = useContext(PlayerContext),\n      play = _useContext.play,\n      playList = _useContext.playList;\n\n  var episodeList = [].concat(_toConsumableArray(lastedEpisodes), _toConsumableArray(allEpisodes)); // passando todos os episodios\n  // useEffect(() => { //modelo SPA, só no acesso do usuário\n  //   fetch('http://localhost:3333/episodes')\n  //     .then((response) => response.json())\n  //     .then((data) => console.log(data));\n  // }, []) // 1º param: o que quero executar, 2º param: quando\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | Podcastnny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"image-audio/eu-e-tay.jpeg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lastedEpisodes.map(function (episode, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: 192,\n              height: 192,\n              src: episode.thumbnail,\n              alt: episode.title,\n              objectFit: \"cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, _this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.episodeDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationToString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: function onClick() {\n                return playList(episodeList, index);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/play-green.svg\",\n                alt: \"Tocar episodio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, _this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todos os epis\\xF3dios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Podcast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Integrantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Dura\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allEpisodes.map(function (episode, index) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: 72\n                },\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  width: 120,\n                  height: 120,\n                  src: episode.thumbnail,\n                  alt: episode.title,\n                  objectFit: \"cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/episodes/\".concat(episode.id),\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: episode.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: 100\n                },\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: episode.durationToString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: function onClick() {\n                    return playList(episodeList, index + lastedEpisodes.length);\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/play-green.svg\",\n                    alt: \"Tocar epis\\xF3dio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, _this)]\n            }, episode.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} //modelo SSR, sempre carrega na home \n// export async function getServerSideProps() { //passa tudo por props, pela propriedade\n\n_s(Home, \"SAj7xAxAHVv1UQThaHt+I5l6alI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/trabelo/Documents/podcastnny/src/pages/index.tsx"],"names":["React","useContext","Image","Head","Link","styles","PlayerContext","Home","lastedEpisodes","allEpisodes","play","playList","episodeList","homepage","latestEpisodes","map","episode","index","thumbnail","title","episodeDetails","members","publishedAt","durationToString","id","width","length"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { GetStaticProps } from 'next'; //tipagem do proprio next\nimport Image from 'next/image';\nimport Head from 'next/head';\nimport { api } from '../services/api';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport Link from 'next/link';\nimport { convertDurationToTimeString } from '../utils/convertDuration';\nimport styles from './home.module.scss';\nimport { PlayerContext } from \"../contexts/PlayerContext\";\n\ntype IEpisodes = { // interface\n  id: string,\n  title: string,\n  members: string,\n  publishedAt: string,\n  thumbnail: string,\n  duration: number,\n  durationToString: string,\n  url: string,\n}\n\ntype HomeProp = {\n  lastedEpisodes: Array<IEpisodes>\n  allEpisodes: Array<IEpisodes>\n}\n\nexport default function Home({ lastedEpisodes, allEpisodes }: HomeProp) {\n  const { play, playList } = useContext(PlayerContext);\n  const episodeList = [...lastedEpisodes, ...allEpisodes]; // passando todos os episodios\n\n  // useEffect(() => { //modelo SPA, só no acesso do usuário\n  //   fetch('http://localhost:3333/episodes')\n  //     .then((response) => response.json())\n  //     .then((data) => console.log(data));\n  // }, []) // 1º param: o que quero executar, 2º param: quando\n\n  return (\n    <div className={styles.homepage}>\n      <Head> \n      {/* Tudo que colocar aqui será injetado no head do html */}\n        <title>Home | Podcastnny</title>\n      </Head>\n\n      <section className={styles.latestEpisodes}>\n        <h2>Últimos lançamentos</h2>\n        <div>\n          <img src=\"image-audio/eu-e-tay.jpeg\" alt=\"\"/>\n        </div>\n        <ul>\n          {lastedEpisodes.map((episode, index) => {\n            return (\n              <li key={episode.id}>\n                <Image \n                width={192} \n                height={192} \n                src={episode.thumbnail} \n                alt={episode.title}\n                objectFit=\"cover\" \n                /> {/* {otimizar a imagem} */}\n                <div className={styles.episodeDetails}>\n                  <a href=\"\">{episode.title}</a>\n                  <p>{episode.members}</p>\n                  <span>{episode.publishedAt}</span>\n                  <span>{episode.durationToString}</span>\n                </div>\n                {/* // escolher um episodio (index), dentre todos */}\n                <button type=\"button\" onClick={() => playList(episodeList, index)}>\n                  <img src=\"/play-green.svg\" alt=\"Tocar episodio\" />\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n      <section className={styles.allEpisodes}>\n          <h2>Todos os episódios</h2>\n\n          <table cellSpacing={0}>\n            <thead>\n            <tr>\n                <th></th>\n                <th>Podcast</th>\n                <th>Integrantes</th>\n                <th>Data</th>\n                <th>Duração</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {allEpisodes.map((episode, index) => {\n                return (\n                  <tr key={episode.id}>\n                    <td style={{ width: 72 }}>\n                      <Image \n                        width={120}\n                        height={120}\n                        src={episode.thumbnail}\n                        alt={episode.title}\n                        objectFit=\"cover\"\n                      />\n                    </td>\n                    <td>\n                      <Link href={`/episodes/${episode.id}`}>\n                        <a>{episode.title}</a>\n                      </Link>\n                    </td>\n                    <td>{episode.members}</td>\n                    <td style={{ width: 100 }}>{episode.publishedAt}</td>\n                    <td>{episode.durationToString}</td>\n                    <td> \n                      <button type=\"button\" onClick={() =>  playList(episodeList, index + lastedEpisodes.length)}> {/* Enviando um episodio para tocar, episode que vem de dentro do map */}\n                        <img src=\"/play-green.svg\" alt=\"Tocar episódio\"/>\n                      </button>\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n\n      </section>\n    </div>\n  )\n}\n\n//modelo SSR, sempre carrega na home \n// export async function getServerSideProps() { //passa tudo por props, pela propriedade\n\nexport const getStaticProps: GetStaticProps = async () => { // modelo SSG, carrega só de uma vez e mantem, sem precisar carregar todas as vezes\n  const { data } = await api.get('episodes', {\n    params: { //limite de quant retorando = 12, ordenar pela da de publicacao, em ordem decrescente  \n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      thumbnail: episode.thumbnail,\n      duration: Number(episode.file.duration),\n      durationToString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    }\n  })\n\n  //retornar os lancamentos e os restantes separados\n  const lastedEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length)\n\n  return {\n    props: {\n      // episodes: data, // dados puros \n      lastedEpisodes,\n      allEpisodes, //dados formatados episodes: episodes\n    },\n    revalidate: 60 * 60 * 8, // a cada 8 horas a pessoa gera uma nova versão da pagina\n  }\n}"]},"metadata":{},"sourceType":"module"}