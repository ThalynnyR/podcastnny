{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useState } from 'react'; // Compartilhamento de informações\n\nexport const PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider({\n  children\n}) {\n  const {\n    0: episodeList,\n    1: setEpisodeList\n  } = useState([]);\n  const {\n    0: currentEpisodeIndex,\n    1: setCurrentEpisodeIndex\n  } = useState(0);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  function play(episode) {\n    // jogar dentro do episodeList\n    setEpisodeList([episode]); // só um dentro do array\n\n    setCurrentEpisodeIndex(0); // então esse precisa ser o tocado no momento, forçando ser o unico do array, ou seja, 0\n\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying); // se tiver pause, vira play e vice versa\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsx(PlayerContext.Provider, {\n    value: {\n      episodeList,\n      currentEpisodeIndex,\n      play,\n      isPlaying,\n      togglePlay,\n      setPlayingState\n    },\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}